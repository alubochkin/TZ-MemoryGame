{"version":3,"sources":["components/Cards/CardItem/CardItem.module.css","components/StartGame/StartGame.module.css","components/Header/Header.module.css","components/Cards/Cards.module.css","hoc/Layout/Layout.module.css","components/Cards/CardItem/CardItem.js","helpers/arrayIconsForCards.js","components/Cards/Cards.js","components/StartGame/StartGame.js","components/Header/Header.js","hoc/Layout/Layout.js","helpers/auxiliary.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","CardItem","props","cls","classes","open","push","guessedCard","className","join","onClick","openHandler","front","back","icon","icons","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","Cards","observer","store","CardsContainer","cards","map","card","openCard","cardName","id","StartGame","Description","start","Header","isGame","GameData","timer","coupleCard","Layout","this","children","Component","cardCreated","Array","fill","num","index","sort","Math","random","cardCreateObject","configure","enforceActions","isOpenCard","gameControl","finishText","time","alert","makeAutoObservable","timerGame","idTimOut","setTimeout","clearTimeout","timerId","setInterval","clearInterval","dellay","cardItem","Object","assign","console","log","length","runInAction","Promise","resolve","setTimeOutId","then","_countDownOpenCard","App","Store","gameOver","gameStart","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7385dfdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardItem\":\"CardItem-module__CardItem--6QZhw\",\"front\":\"CardItem-module__front--3igJb\",\"back\":\"CardItem-module__back--1mDcv\",\"open\":\"CardItem-module__open--30WR3\",\"guessedCard\":\"CardItem-module__guessedCard--2TpYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartGame\":\"StartGame-module__StartGame--1a_Iy\",\"Description\":\"StartGame-module__Description--XucgJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header-module__Header--JI6Qw\",\"GameData\":\"Header-module__GameData--2Es1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardsContainer\":\"Cards-module__CardsContainer--32znB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout-module__Layout--2TPmI\"};","import React from 'react';\r\nimport classes from './CardItem.module.css';\r\n\r\nexport const CardItem = (props) => {\r\n\r\n\r\n\tconst cls = [classes.CardItem]\r\n\r\n\tif (props.open) {\r\n\t\tcls.push(classes.open)\r\n\t}\r\n  if (props.guessedCard) {\r\n\t\tcls.push(classes.guessedCard)\r\n\t}\r\n\r\n\r\n  return (\r\n    <div \r\n      className={cls.join(' ')}\r\n      onClick={props.openHandler}\r\n    >\r\n        <div className={classes.front}></div>\r\n\r\n        <div className={classes.back}>\r\n          <i className=\"material-icons\">{props.icon}</i>\r\n        </div>\r\n            \r\n    </div>\r\n  )\r\n}\r\n","const icons =  {\r\n  1: 'cake',\r\n  2: 'business_center',\r\n  3: 'camera_alt',\r\n  4: 'child_friendly',\r\n  5: 'content_cut',\r\n  6: 'directions_bike',\r\n  7: 'directions_run',\r\n  8: 'drive_eta',\r\n  9: 'favorite_border',\r\n  10: 'flight',\r\n  11: 'headset',\r\n  12: 'local_cafe',\r\n  13: 'local_dining',\r\n  14: 'local_florist',\r\n  15: 'local_pizza',\r\n  16: 'mood',\r\n  17: 'watch',\r\n  18: 'vpn_key',\r\n\r\n}\r\n\r\nexport default icons;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { Fragment } from 'react';\r\nimport {observer} from 'mobx-react-lite';\r\n\r\nimport { CardItem } from './CardItem/CardItem';\r\nimport classes from './Cards.module.css';\r\n\r\nimport  icons from '../../helpers/arrayIconsForCards';\r\n\r\nexport const Cards = observer(({store}) => {\r\n\r\n  // console.log(store.openCard);\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <div className={classes.CardsContainer}>\r\n        { store.cards.map((card) => (\r\n          <CardItem      \r\n            openHandler={() => card.guessedCard ? null : store.openCard(card)}\r\n            icon={icons[+card.cardName]}\r\n            key={card.id}\r\n            cardName={card.cardName}\r\n            open={card.open}\r\n            guessedCard={card.guessedCard}\r\n          />\r\n      ))}\r\n\r\n      </div>\r\n    </Fragment>\r\n\r\n  )\r\n});\r\n","import React from 'react';\r\nimport classes from './StartGame.module.css';\r\n\r\nexport const StartGame = (props) => {\r\n\r\n  return (\r\n    <div className={classes.StartGame}>\r\n      <div className={classes.Description}>\r\n        <h3>Игра \"Память\" тренируйте внимательность и память играя</h3>\r\n        <p>Ваша задача открыть все карточки, как можно быстрее</p>\r\n\r\n      </div>\r\n      <button\r\n        onClick={() => props.start()}\r\n      >\r\n        Начать игру\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport classes from './Header.module.css'\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <div className={classes.Header}>\r\n\r\n\r\n    {\r\n      props.isGame \r\n        ? <div className={classes.GameData}>\r\n            <span>Прошло <b>{props.timer}</b> сек</span>\r\n            <span>Открыто <b>{props.coupleCard}</b> пар карточек из <b>18</b></span>\r\n          </div>\r\n        : null\r\n    }\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport classes from './Layout.module.css'\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;","const cardCreateObject = (num, index) => {\r\n  return {\r\n    cardName: num,\r\n    id: index,\r\n    open: false,\r\n    guessedCard: false\r\n  }\r\n}\r\n\r\nexport const cardCreated = () => {\r\n  return new Array(36).fill(0)\r\n    .map((num, index) => index <= 17 ? num += index + 1 : num += index - 17)\r\n    .sort(() => Math.random() - 0.5)\r\n    .map((num, index) => cardCreateObject(num, index))\r\n}\r\n","import {makeAutoObservable, runInAction, configure} from 'mobx';\r\nimport { cardCreated } from '../helpers/auxiliary';\r\n\r\nconfigure({\r\n    enforceActions: \"never\",\r\n})\r\n\r\nclass Store {\r\n\r\n  cards = cardCreated();\r\n  isOpenCard = [];\r\n  coupleCard = [];\r\n\r\n  gameControl = {\r\n    isGame: false,\r\n    finishText: 'Игра окончена',\r\n    time: 0,\r\n    alert: false\r\n  };\r\n\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n\r\n  gameStart() {\r\n    this.gameControl.isGame = true;\r\n    this.timerGame();\r\n  }\r\n\r\n  gameOver() {\r\n    this.gameControl.alert = true;\r\n    const idTimOut = setTimeout(() => {\r\n      this.gameControl.isGame = false;\r\n      this.cards = cardCreated();\r\n    \r\n      this.gameControl = {\r\n        isGame: false,\r\n        finishText: 'Игра окончена',\r\n        time: 0,\r\n        alert: false\r\n      };\r\n      clearTimeout(idTimOut)\r\n    } , 3000)\r\n\r\n    this.isOpenCard = [];\r\n    this.coupleCard = [];\r\n\r\n  }\r\n\r\n  timerGame() {\r\n    if (this.gameControl.isGame) { \r\n      const timerId = setInterval(() => {\r\n        if (!this.gameControl.isGame) clearInterval(timerId); \r\n\r\n        this.gameControl.time += 1\r\n      }, 1000);\r\n    } \r\n  }\r\n\r\n\r\n  _countDownOpenCard(coupleCard = null) {\r\n    let dellay = 3000\r\n\r\n    if (coupleCard) {\r\n      dellay = 500;\r\n      this.coupleCard.push(coupleCard.map((cardItem) => Object.assign(cardItem, cardItem.guessedCard = true )));\r\n      this.cards.map((cardItem) => Object.assign(cardItem, coupleCard));\r\n\r\n\r\n\r\n      console.log(this.coupleCard.length);\r\n      if (this.coupleCard.length >= 18) {\r\n\r\n      }\r\n    }\r\n\r\n    runInAction(() => {\r\n      let promise = new Promise((resolve) => {\r\n        const setTimeOutId =  setTimeout(() => {         \r\n          this.cards.map((cardItem) => Object.assign(cardItem, cardItem.open = false ))       \r\n          resolve(setTimeOutId);\r\n        }, dellay);  \r\n      });\r\n      \r\n      promise\r\n        .then((id) => clearTimeout(id))\r\n        .then(() => this.isOpenCard = [])\r\n    })\r\n\r\n\r\n  }\r\n\r\n  openCard(card) {\r\n\r\n    if (this.isOpenCard.length < 2) {\r\n      this.cards.map((cardItem) => cardItem.id === card.id ? Object.assign(card, card.open = true ) : cardItem);\r\n    \r\n      this.isOpenCard.push(card)\r\n\r\n      if (this.isOpenCard.length === 2) {  \r\n\r\n        if (this.isOpenCard[0].cardName === this.isOpenCard[1].cardName) {\r\n          this._countDownOpenCard(this.isOpenCard);\r\n        } else {\r\n          this._countDownOpenCard();\r\n        }\r\n      }\r\n    } \r\n\r\n  }\r\n}\r\n\r\nexport default new Store();","// eslint-disable-next-line no-unused-vars\nimport react, { useState } from 'react';\nimport {observer} from 'mobx-react-lite';\nimport { Cards } from './components/Cards/Cards';\nimport { StartGame } from './components/StartGame/StartGame';\nimport {Header} from './components/Header/Header';\nimport Layout from './hoc/Layout/Layout';\n\nimport Store from './store/store';\n\n\nconst App = observer(() => {\n\n  const start = () => Store.gameStart();\n\n  if (Store.coupleCard.length >= 18) Store.gameOver()\n\n\n  return (\n    <Layout>\n\n      <Header \n        isGame={Store.gameControl.isGame}\n        coupleCard={Store.coupleCard.length}\n        timer={Store.gameControl.time}\n      />\n\n      {Store.gameControl.alert ? <div className='alertFinish'>{Store.gameControl.finishText}</div> : null}\n\n      { Store.gameControl.isGame\n          ? <Cards store={Store}/>\n          : <StartGame start={start} />\n      }\n    </Layout>\n  );\n})\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}